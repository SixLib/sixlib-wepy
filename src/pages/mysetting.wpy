<style lang='less'>
  .avatar {
    margin: ~'40rpx';
    .mine-avatar {
      width: ~'200rpx';
      height: ~'200rpx';
      border-radius: 50%;
      overflow: hidden;
      display: block;
    }
  }
  .mysetting-content {
    width: 100%;
    .select-picker {
      position: relative;
      display: flex;
      align-items: center;
      overflow: hidden;
      padding: 11px 15px;
      background: #fff;
      color: #495060;
      font-size: 14px;
      .select-title {
        color: #495060;
        min-width: ~'65px';
        padding-right: ~'10px';
      }
    }
    .select-picker::after {
      content: '';
      position: absolute;
      top: 0;
      left: 0;
      width: 200%;
      height: 200%;
      transform: scale(.5);
      transform-origin: 0 0;
      pointer-events: none;
      box-sizing: border-box;
      border: 0 solid #e9eaec;
      border-bottom-width: 1px;
      left: 15px;
      right: 0
    }
  }
  .bottom {
    width: 100%;
    position: fixed;
    bottom: 0px;
    z-index: 999;
  }
</style>

<template>
  <view class='container'>
    <view class='avatar' @tap='uploadFile(0)'>
      <view class='mine-avatar' wx:if='{{avatarUrl}}'>
        <image mode='scaleToFill' style='width:100%;height:100%;' src='{{avatarUrl}}' />
      </view>
      <view class='mine-avatar' wx:else>
        <open-data class='mine-avatar' type='userAvatarUrl' />
      </view>
    </view>
    <view class='mysetting-content'>
      <i-panel title='基本信息'>
        <i-input value='{{ nickName }}' bind:change='bindNickName' title='昵称' placeholder='请输入' maxlength='10' />
        <picker bindchange='bindGenderChange' value='{{genderCurrent}}' range='{{genderArr}}'>
          <view class='picker select-picker'>
            <view class='select-title'>性别</view>
            <view>{{genderArr[genderCurrent]}}</view>
          </view>
        </picker>
        <picker mode='date' bindchange='bindBirthdayChange' start='1900-01-01' value='{{birthdayCurrent}}'>
          <view class='picker select-picker'>
            <view class='select-title'>生日</view>
            <view>{{birthday}}</view>
          </view>
        </picker>
        <i-input value='{{ mobile }}' type='number' bind:change='bindMobile(e)' title='联系电话' placeholder='请输入' maxlength='11' />
      </i-panel>
      <i-panel title='我的二维码'>
        <view class='picker select-picker' style='justify-content:center;' wx:if='{{isQRCodeId}}'>
          <i-button style='width:50%;' bind:click='uploadFile(1)' type='primary' shape="circle"> 上传二维码 </i-button>
        </view>
        <view class='picker select-picker' style='justify-content:center;' wx:else>
          <i-button bind:click='previewImage' type='primary'> 查看二维码 </i-button>
          <i-button bind:click='uploadFile(1)' type='primary'> 更换二维码 </i-button>
        </view>
      </i-panel>
    </view>
    <view class='bottom'>
      <i-button bind:click='handleClick' type='primary' long='true'>确认提交</i-button>
    </view>
  </view>
  <i-toast id="toast" />
</template>

<script>
  import wepy from 'wepy'
  import api from '@/api/index'
  import util from '@/utils/util'
  import {
    $Toast
  } from '@/components/weapp/base/index'
  import {
    getStore
  } from 'wepy-redux'
  const store = getStore()
  export default class mySetting extends wepy.page {
    config = {
      navigationBarTitleText: '我的信息',
      'usingComponents': {
        'i-panel': '../components/weapp/panel/index',
        'i-input': '../components/weapp/input/index',
        'i-radio-group': '../components/weapp/radio-group/index',
        'i-radio': '../components/weapp/radio/index',
        'i-button': '../components/weapp/button/index',
        'i-toast': '../components/weapp/toast/index'
      }
    }
    data = {
      avatarUrl: '',
      avatarId: '',
      isQRCodeId: true,
      QRCodeUrl: '',
      QRCodeId: '',
      genderCurrent: 0,
      birthdayCurrent: '',
      genderArr: ['男', '女'],
      nickName: '',
      birthday: '',
      mobile: ''
    }
    bindGenderChange({
      detail
    }) {
      this.genderCurrent = detail.value
    }
    bindBirthdayChange({
      detail
    }) {
      this.birthday = detail.value
    }
    bindNickName(e) {
      this.nickName = e.detail.detail.value
    }
    bindMobile(e) {
      this.mobile = e.detail.detail.value
    }
    valid() {
      let state = true
      if (this.nickName.length === 0) {
        state = false
        $Toast({
          content: '请填写昵称',
          type: 'warning'
        })
      }
      if (this.mobile && this.mobile.length > 0 && !util.vailPhone(this.mobile)) {
        state = false
        $Toast({
          content: '请正确填写手机号',
          type: 'warning'
        })
      }
      return state
    }
    methods = {
      previewImage() {
        wepy.previewImage({
          urls: [this.QRCodeUrl] // 需要预览的图片http链接列表
        })
      },
      uploadFile(type) {
        let _this = this
        wepy.chooseImage({
          count: 1,
          sizeType: ['original', 'compressed'],
          sourceType: ['album', 'camera'],
          success(res) {
            // tempFilePath可以作为img标签的src属性显示图片
            const tempFilePaths = res.tempFilePaths
            _this.$apply()
            let openappid = store.getState().wechartdata.openappid
            wx.cloud.uploadFile({
              cloudPath: `uploadFile${type}${openappid}${new Date().getTime()}.png`, // 上传至云端的路径
              filePath: tempFilePaths[0], // 小程序临时文件路径
              success: res => {
                // 返回文件 ID
                console.log(res.fileID)
                switch (type) {
                  case '0':
                    _this.avatarId = res.fileID
                    _this.avatarUrl = tempFilePaths[0]
                    break
                  case '1':
                    _this.isQRCodeId = false
                    _this.QRCodeUrl = tempFilePaths[0]
                    _this.QRCodeId = res.fileID
                    break
                  default:
                    break
                }
                _this.$apply()
              },
              fail: console.error
            })
          }
        })
      },
      async handleClick() {
        if (this.valid()) {
          let res = await api.accountAddOrUpdate({
            QRCodeId: this.QRCodeId || '',
            avatarId: this.avatarId || '',
            nickName: this.nickName || '',
            gender: this.genderCurrent || 0,
            birthday: this.birthday || '',
            mobile: this.mobile || ''
          })
          if (res.code === 200) {
            $Toast({
              content: '已提交',
              type: 'success'
            })
            setTimeout(() => {
              wepy.navigateBack({
                delta: 1
              })
            }, 1000)
          } else {
            $Toast({
              content: '未提交',
              type: 'warning'
            })
          }
        }
      }
    }
    async onLoad() {
      let accountStore = store.getState().account
      this.nickName = accountStore.nickName || ''
      this.genderCurrent = accountStore.gender || 0
      this.birthday = accountStore.birthday
      this.mobile = accountStore.mobile
      this.avatarId = accountStore.avatarId || ''
      this.isQRCodeId = accountStore.QRCodeId ? false : true
      this.QRCodeId = accountStore.QRCodeId || ''
      if (accountStore.avatarId && accountStore.avatarId.length > 0) {
        this.avatarUrl = accountStore.avatarId
      }
      if (this.avatarId && this.avatarId.length > 0) {
        this.QRCodeUrl = accountStore.QRCodeId
      }
      this.$apply()
    }
  }
</script>
